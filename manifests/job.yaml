apiVersion: batch/v1
kind: Job
metadata:
  name: k6
  labels:
    app.kubernetes.io/instance: k6
spec:
  template:
    spec:
      containers:
        - name: k6
          image: docker.io/dkhachyan/k6-grpc:v0.0.2
          resources:
            limits:
              cpu: 32
              memory: 8Gi
          volumeMounts:
            - name: k6-config
              mountPath: /etc/k6.conf
              subPath: k6.conf
          securityContext:
            runAsUser: 1000
          command:
            - k6
            - run
            - /etc/k6.conf
      restartPolicy: Never
      volumes:
        - name: k6-config
          configMap:
            name: k6-configmap
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: k6-configmap
data:
  k6.conf: |
    import grpc from 'k6/net/grpc';
    import { check, sleep } from 'k6';

    export const options = {
        vus: 100,
        duration: '1m',
        rps: 8000,
        summaryTrendStats: ['avg', 'min', 'med', 'max', 'p(95)', 'p(99)']
      };

    const client = new grpc.Client();
    client.load(['proto'], 'simple.proto');

    export default () => {
        client.connect('grpc-echo-server:8080', {
          plaintext: true
        });
      
        const data = { message: 'Hello' };
        const response = client.invoke('Echo/Do', data);

        check(response, {
          'status is OK': (r) => r && r.status === grpc.StatusOK,
        });

        console.log(JSON.stringify(response.message));
        client.close();
        sleep(1)
      };

